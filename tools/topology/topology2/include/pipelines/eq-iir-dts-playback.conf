#
# Volume playback pipeline with EQ IIR
#
# A simple pipeline. All attributes defined herein are namespaced by alsatplg to
# "Object.Pipeline.volume-playback.N.attribute_name"
#
# Usage: this component can be used by declaring in the top-level topology conf file as follows:
#
# 	Object.Pipeline.volume-playback."N" {
#		format		"s16le"
#		period		1000
#		time_domain	"timer"
#		channels	2
#		rate		48000
#	}
#
# where N is the unique pipeline_id for this pipeline object within the same alsaconf node.
#
#
# (source) host.N.playback -> buffer.N.1 -> eq_iir.N.1 -> buffer.N.2 -> dts.N.1 -> buffer.N.3 (sink endpoint)
#

<include/common/route.conf>
<include/common/audio_format.conf>
<include/components/buffer.conf>
<include/components/eqiir.conf>
<include/components/host.conf>
<include/components/pipeline.conf>
<include/components/dts.conf>
<include/controls/bytes.conf>

Class.Pipeline."eq-iir-dts-playback" {
	# include common pipeline attribute definitions
	<include/pipelines/pipeline-common.conf>

	attributes {
		# pipeline name is constructed as "volume-playback.1"
		!constructor [
			"index"
		]
		!immutable [
			"direction"
		]
		#
		# volume-playback objects instantiated within the same alsaconf node must have
		# unique index attribute
		#
		unique	"instance"
	}

	Object.Widget {
		pipeline."1" {}

        copier."1" {
            copier_type "host"
            type    "aif_in"
            node_type $HDA_HOST_OUTPUT_CLASS
            num_input_audio_formats 3
            num_output_audio_formats 3
            # 16-bit 48KHz 2ch
            Object.Base.audio_format.1 {
                out_bit_depth       32
                out_valid_bit_depth 32
            }
            # 24-bit 48KHz 2ch
            Object.Base.audio_format.2 {
                in_bit_depth        32
                in_valid_bit_depth  24
                out_bit_depth       32
                out_valid_bit_depth 32
            }
            # 32-bit 48KHz 2ch
            Object.Base.audio_format.3 {
                in_bit_depth        32
                in_valid_bit_depth  32
                out_bit_depth       32
                out_valid_bit_depth 32
            }
        }        

		buffer."1" {
			periods	2
			caps		"host"
		}
		
        eqiir."1" {
			# byte control for EQ IIR
            num_input_audio_formats 1
            num_output_audio_formats 1

            Object.Base.audio_format.1 {
                in_bit_depth        32
                in_valid_bit_depth  32
                out_bit_depth       32
                out_valid_bit_depth 32
            }

            Object.Control.bytes."1" {
            }
            
		}
		
        buffer."2" {
			periods	2
			caps		"host"
		}

		dts."1" {
            num_input_audio_formats 1
            num_output_audio_formats 1

            Object.Base.audio_format.1 {
                in_bit_depth        32
                in_valid_bit_depth  32
                out_bit_depth       32
                out_valid_bit_depth 32
            }

            Object.Control.bytes."1" {
            }
		}

        copier."2" {
            type dai_in
            num_input_audio_formats 1
            num_output_audio_formats 1

            # copier only supports one format based on mixin/mixout requirements: 32-bit 48KHz 2ch
            Object.Base.audio_format [
                {
                    in_bit_depth        32
                    in_valid_bit_depth  32
                    out_bit_depth       32
                    out_valid_bit_depth 32
                }
            ]
        }

	}

	# Pipeline connections
	# The index attribute values for the source/sink widgets will be populated
	# when the route objects are built
	Object.Base {
		route."1" {
            source  "copier.host.$index.1"
			sink	"buffer.$index.1"
		}
		
        route."2" {
			source	"buffer.$index.1"
			sink	"eqiir.$index.1"
		}

		route."3" {
			source	"eqiir.$index.1"
			sink	"buffer.$index.2"
		}

		route."4" {
			source	"buffer.$index.2"
			sink	"dts.$index.1"
		}
		
        route."5" {
			source	"dts.$index.1"
			sink	"copier.SSP.$index.2"
		}
	}

	# Default attribute values
	direction 	"playback"
	time_domain	"timer"
	period		1000
	channels	2
	rate		48000
	priority	0
	core 		0
	frames		0
	mips		5000
}
